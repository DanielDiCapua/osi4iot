version: "3.3"

services:

services:
  traefik:
    image: osi4iot/traefik:v1.0
    command:
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --ping
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-public
      - --api
      - --accesslog
      - --log
    deploy:
      mode: replicated
      replicas: 3
    #   labels:
    #     - traefik.enable=true
    #     - traefik.http.routers.traefik.rule=Host(`${DOMAIN_NAME}`)
    #     - traefik.http.routers.traefik.entrypoints=websecure
    #     - traefik.http.routers.traefik.tls=true
    #     - traefik.http.routers.traefik.service=api@internal
    #     - traefik.http.services.traefik.loadbalancer.server.port=8080
    #     - traefik.http.routers.traefik.middlewares=admin-auth
    #     - traefik.http.middlewares.admin-auth.basicauth.users=dicapua:$$apr1$$UVPioB1u$$52vwqCRCI2T1MTimMtZhc0
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs/domain_certs/:/etc/certs/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  mosquitto:
    image: osi4iot/mosquitto:v1.0
    networks:
      - internal_net
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"
    volumes:
      - ./config/mosquitto:/mosquitto/config/
      - mosquitto_data:/mosquitto/data/
      - mosquitto_log:/mosquitto/log/
      - ./certs/mqtt_server_certs/:/mosquitto/mqtt_certs/
      - ./certs/domain_certs/:/mosquitto/wss_certs/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    deploy:
      placement:
        constraints: [ node.id == $NODE_ID ]

  agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro       
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: osi4iot/portainer:v1.0
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8000:8000"
    networks:
      - traefik-public
      - agent_network
    deploy:
      placement:
        constraints: [ node.role == manager ]  
      labels:
        - traefik.enable=true
        - traefik.http.routers.portainer.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/portainer/`)
        - traefik.http.middlewares.portainerpathstrip.stripprefix.prefixes=/portainer
        - traefik.http.routers.portainer.middlewares=portainerpathstrip@docker
        - traefik.http.routers.portainer.entrypoints=websecure
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.service=portainer
        - traefik.http.services.portainer.loadbalancer.server.port=9000
        # Edge
        - traefik.http.routers.edge.rule=Host(`edge.${DOMAIN_NAME}`)
        - traefik.http.routers.edge.entrypoints=websecure
        - traefik.http.routers.edge.tls=true
        - traefik.http.routers.edge.service=edge
        - traefik.http.services.edge.loadbalancer.server.port=8000

  pgadmin4:
    image: osi4iot/pgadmin4:v1.0
    user: "${UID}:${GID}"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - pgadmin4_data:/var/lib/pgadmin
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro 
    networks:
      - internal_net
      - traefik-public
    deploy:
      placement:
        constraints: [node.role == manager]   
      labels:
        - traefik.enable=true
        - traefik.http.routers.pgadmin4.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/pgadmin4/`)
        - traefik.http.middlewares.pgadmin4-prefix.stripprefix.prefixes=/pgadmin4
        - traefik.http.routers.pgadmin4.middlewares=pgadmin4-prefix,pgadmin4-header,pgadmin4-redirectregex
        - traefik.http.middlewares.pgadmin4-prefix.stripprefix.forceslash=false
        - traefik.http.middlewares.pgadmin4-header.headers.customrequestheaders.X-Script-Name=/pgadmin4/
        - traefik.http.middlewares.pgadmin4-redirectregex.redirectregex.regex=https://${DOMAIN_NAME}/(pgadmin4*)
        - traefik.http.middlewares.pgadmin4-redirectregex.redirectregex.replacement=https://${DOMAIN_NAME}/$${1}"
        - traefik.http.routers.pgadmin4.entrypoints=websecure
        - traefik.http.routers.pgadmin4.tls=true
        - traefik.http.routers.pgadmin4.service=pgadmin4
        - traefik.http.services.pgadmin4.loadbalancer.server.port=80

  postgres:
    image: osi4iot/postgres:v1.0
    networks:
      - internal_net
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      GRAFANA_DB_PASSWORD: ${GRAFANA_DB_PASSWORD}
      GRAFANA_DATASOURCE_PASSWORD: ${GRAFANA_DATASOURCE_PASSWORD}
      TZ: ${TIME_ZONE}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro      

  nodered:
    image: osi4iot/nodered:v1.0     
    user: "${UID}:${GID}"
    networks:
      - internal_net
      - traefik-public
    env_file:
      - .env
    volumes:
      - nodered_data:/data
      - ./certs/mqtt_nodered_certs/:/data/certs/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro      
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.nodered.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/nodered/`)
        - traefik.http.middlewares.nodered-prefix.stripprefix.prefixes=/nodered
        - traefik.http.routers.nodered.middlewares=nodered-prefix,nodered-header,nodered-redirectregex
        - traefik.http.middlewares.nodered-prefix.stripprefix.forceslash=false
        - traefik.http.middlewares.nodered-header.headers.customrequestheaders.X-Script-Name=/nodered/
        - traefik.http.middlewares.nodered-redirectregex.redirectregex.regex=https://${DOMAIN_NAME}/(nodered*)
        - traefik.http.middlewares.nodered-redirectregex.redirectregex.replacement=https://${DOMAIN_NAME}/$${1}"        
        - traefik.http.routers.nodered.entrypoints=websecure
        - traefik.http.routers.nodered.tls=true
        - traefik.http.routers.nodered.service=nodered
        - traefik.http.services.nodered.loadbalancer.server.port=1880

  grafana:
    image: osi4iot/grafana:v1.0
    user: "${UID}:${GID}"
    networks:
      - internal_net
      - traefik-public
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro      
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - DEFAULT_TIME_ZONE=${DEFAULT_TIME_ZONE} 
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,briangann-gauge-panel,vonage-status-panel,neocat-cal-heatmap-panel
      - GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - HOME_DASHBOARD_PATH=/var/lib/grafana/data/home_dashboard.json
      - GMAIL_USER=${GMAIL_USER}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - TELEGRAM_BOTTOKEN=${TELEGRAM_BOTTOKEN}
      - TELEGRAM_CHATID=${TELEGRAM_CHATID}
      - GF_RENDERING_SERVER_URL=http://grafana_renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:5000/grafana/
      - GF_LOG_FILTERS=rendering:debug
      - POSTGRES_DB=${POSTGRES_DB}
      - GRAFANA_DB_PASSWORD=${GRAFANA_DB_PASSWORD}
      - GRAFANA_DATASOURCE_PASSWORD=${GRAFANA_DATASOURCE_PASSWORD}
      - MAIN_ORGANIZATION_NAME=${MAIN_ORGANIZATION_NAME}
      - MAIN_ORGANIZATION_DATASOURCE_NAME=${MAIN_ORGANIZATION_DATASOURCE_NAME}
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/grafana/`)
        - traefik.http.middlewares.grafana-prefix.stripprefix.prefixes=/grafana
        - traefik.http.routers.grafana.middlewares=grafana-prefix,grafana-header,grafana-redirectregex
        - traefik.http.middlewares.grafana-prefix.stripprefix.forceslash=false
        - traefik.http.middlewares.grafana-header.headers.customrequestheaders.X-Script-Name=/grafana/
        - traefik.http.middlewares.grafana-redirectregex.redirectregex.regex=https://${DOMAIN_NAME}/(grafana*)
        - traefik.http.middlewares.grafana-redirectregex.redirectregex.replacement=https://${DOMAIN_NAME}/$${1}"        
        - traefik.http.routers.grafana.entrypoints=websecure
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.service=grafana
        - traefik.http.services.grafana.loadbalancer.server.port=5000
  
  grafana_renderer:
    image: osi4iot/grafana_renderer:v1.0      
    networks:
      - internal_net
    ports:
      - 8081
    environment:
      ENABLE_METRICS: 'true'


  admin_api:
    image: osi4iot/admin_api:v1.0
    networks:
      - internal_net
      - traefik-public
    volumes:
      - ./certs/mqtt_server_certs/ca.crt:/app/mqtt_certs/ca.crt
      - ./certs/mqtt_server_certs/ca.key:/app/mqtt_certs/ca.key
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro      
    working_dir: /app
    env_file:
      - .env
    ports:
      - "3200:3200"
    environment:
      PORT: 3200
      WAIT_HOSTS: postgres:5432, grafana:5000
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
      PLATFORM_ADMIN_SURNAME: "Di Capua"
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.admin_api.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/admin_api/`)
        - traefik.http.middlewares.admin_api-prefix.stripprefix.prefixes=/admin_api
        - traefik.http.routers.admin_api.middlewares=admin_api-prefix,admin_api-header,admin_api-redirectregex
        - traefik.http.routers.admin_api.middlewares=admin_api-prefix
        - traefik.http.middlewares.admin_api-prefix.stripprefix.forceslash=false
        - traefik.http.middlewares.admin_api-header.headers.customrequestheaders.X-Script-Name=/admin_api/
        - traefik.http.middlewares.admin_api-redirectregex.redirectregex.regex=https://${DOMAIN_NAME}/(admin_api*)
        - traefik.http.middlewares.admin_api-redirectregex.redirectregex.replacement=https://${admin_api}/$${1}"         
        - traefik.http.routers.admin_api.entrypoints=websecure
        - traefik.http.routers.admin_api.tls=true        
        - traefik.http.routers.admin_api.service=admin_api
        - traefik.http.services.admin_api.loadbalancer.server.port=3200

  frontend:
    image: osi4iot/frontend:v1.0
    environment:
      PLATFORM_NAME: ${PLATFORM_NAME}
      DOMAIN_NAME: ${DOMAIN_NAME}  
    networks:
      - internal_net
      - traefik-public
    command: nginx -g "daemon off";
    volumes:
      - nodered_data:/data
      - ./certs/mqtt_nodered_certs/:/data/certs/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro       
    deploy:
      mode: replicated
      replicas: 3    
      labels:
        - traefik.enable=true
        - traefik.http.routers.frontend.rule=Host(`${DOMAIN_NAME}`)
        - traefik.http.routers.frontend.entrypoints=websecure
        - traefik.http.routers.frontend.tls=true        
        - traefik.http.routers.frontend.service=frontend
        - traefik.http.services.frontend.loadbalancer.server.port=80

  # whoami:
  #   image: traefik/whoami
  #   deploy:
  #     labels:
  #       - traefik.enable=true
  #       - traefik.http.routers.whoami.rule=Host(`${DOMAIN_NAME}`) && Path(`/whoami`)
  #       - traefik.http.routers.whoami.entrypoints=websecure
  #       - traefik.http.routers.whoami.tls=true
  #       - traefik.http.services.whoami.loadbalancer.server.port=80
  #   networks:
  #     - traefik-public

networks:
  traefik-public:
    external: true
  agent_network:
    external: true
  internal_net:
    external: true

volumes:
  mosquitto_data:
  mosquitto_log:
  nodered_data:
  pgdata:
  pgadmin4_data:
  portainer_data:
  grafana_data:
